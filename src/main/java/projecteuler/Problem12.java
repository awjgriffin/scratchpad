package projecteuler;

import static utils.IteratorFunctionalUtils.*;


public class Problem12 extends EulerProblem {

	@Override
	public void solution() {
		
		Iterable<Long> triangles = toIterable(triangles());
		
		for(Long triangle : triangles){
			
			if(getFactors(triangle).length > 500) {
				System.out.println(String.format("%d is the first triangle number to have over 500 divisors.", triangle));
				break;
			}
		}
		
	}

	@Override
	public String problemDescription() {
		
		return new StringBuffer("The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:")
		.append("\n1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...")
		.append("\nLet us list the factors of the first seven triangle numbers:")
		.append("\n1: 1")
		.append("\n3: 1,3")
		.append("\n6: 1,2,3,6")
		.append("\n10: 1,2,5,10")
		.append("\n15: 1,3,5,15")
		.append("\n21: 1,3,7,21")
		.append("\n28: 1,2,4,7,14,28")
		.append("\nWe can see that 28 is the first triangle number to have over five divisors.")
		.append("\nWhat is the value of the first triangle number to have over five hundred divisors?").toString();
	}

}
