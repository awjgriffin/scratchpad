Debugging tip: For server applications, be sure to always specify the -server JVM command line switch when invoking the JVM, even for
development and testing. The server JVM performs more optimization than the client JVM, such as hoisting variables out of a loop that are not
modified in the loop;

Publication
"Publishing an object means making it available to code outside of its current scope, 
such as by storing a reference to it where other code can find it, returning it from a non-private method, 
or passing it to a method in another class"


ALIEN METHODS 
"From the perspective of a class C, an alien method is one whose behaviour is not fully specified by C. This includes
methods in other classes as well as override-able methods (neither private nor final) in C itself."

Any time a class publishes inner classes (such as an EventListener), it is automatically letting a reference to "this"
escape, because the inner instance has an inherent reference to it's enclosing instance.

This can happen during construction, even before the constructor is complete.  In this case the object is not properly
constructed.


A useful exception-handler:

/** If the Throwable is an Error, throw it; if it is a
* RuntimeException return it, otherwise throw IllegalStateException
*/
public static RuntimeException launderThrowable(Throwable t) {
	if (t instanceof RuntimeException)
		return (RuntimeException) t;
	else if (t instanceof Error)
		throw (Error) t;
	else
		throw new IllegalStateException("Not unchecked", t);
}

For computational problems that do no I/O and access no shared data, use the same number of threads (or +1) as 
cpus available; this prevents competition for CPU and memory between threads.
i.e. int count = Runtime.getRuntime().availableProcessors();
